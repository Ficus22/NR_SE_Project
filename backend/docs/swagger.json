{
  "openapi": "3.0.0",
  "info": {
    "title": "API de Gestion d'Inventaire",
    "version": "1.0.0",
    "description": "Documentation de l'API pour gérer les articles et les utilisateurs." // Informations générales de l'API.
  },
  "servers": [
    {"url": "http://localhost:3000", "description": "Local server"} // Point d'entrée principal pour tester en local.
  ],
  "paths": {
    "/api/articles": {
      "get": {
        "summary": "Obtenir tous les articles",
        "description": "Retourne la liste de tous les articles.", // Documentation pour la récupération de tous les articles.
        "responses": {
          "200": {
            "description": "Liste des articles retournée avec succès.",
            "content": {
              "application/json": {
                "example": [
                  {"id": 1, "name": "Article 1", "category": "Catégorie A", "price": 20.0},
                  {"id": 2, "name": "Article 2", "category": "Catégorie B", "price": 30.0}
                ] // Exemple de réponse renvoyée.
              }
            }
          }
        }
      },
      "post": {
        "summary": "Ajouter un nouvel article",
        "description": "Permet d'ajouter un nouvel article dans l'inventaire.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "name": "Chaussures de sport",
                "category": "Chaussures",
                "quantity": 10,
                "price": 59.99
              } // Exemple de payload requis pour ajouter un article.
            }
          }
        },
        "responses": {
          "201": {
            "description": "Article ajouté avec succès.",
            "content": {
              "application/json": {
                "example": {
                  "id": 3,
                  "name": "Chaussures de sport",
                  "category": "Chaussures",
                  "quantity": 10,
                  "price": 59.99
                } // Exemple de réponse si l'ajout est réussi.
              }
            }
          },
          "400": {"description": "Données invalides."} // Message en cas d'erreur dans les données envoyées.
        }
      }
    },
    "/api/articles/{id}": {
      "get": {
        "summary": "Obtenir un article par ID",
        "description": "Retourne les détails d'un article spécifique.", // Documentation pour récupérer un article via son ID.
        "parameters": [
          {"name": "id", "in": "path", "required": true, "description": "ID de l'article", "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Détails de l'article.",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Article 1",
                  "category": "Catégorie A",
                  "quantity": 5,
                  "price": 20.0
                }
              }
            }
          },
          "404": {"description": "Article non trouvé."} // Message si l'ID fourni ne correspond à aucun article.
        }
      },
      "put": {
        "summary": "Mettre à jour un article",
        "description": "Met à jour les détails d'un article existant.",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "description": "ID de l'article", "schema": {"type": "integer"}}
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "name": "Chaussures de sport",
                "category": "Chaussures",
                "quantity": 15,
                "price": 49.99
              } // Exemple de payload requis pour mettre à jour un article.
            }
          }
        },
        "responses": {
          "200": {"description": "Article mis à jour avec succès."},
          "404": {"description": "Article non trouvé."},
          "400": {"description": "Données invalides."}
        }
      },
      "delete": {
        "summary": "Supprimer un article",
        "description": "Supprime un article par son ID.",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "description": "ID de l'article", "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {"description": "Article supprimé avec succès."},
          "404": {"description": "Article non trouvé."}
        }
      }
    }
  }
}
